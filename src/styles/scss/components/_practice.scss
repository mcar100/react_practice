@use "../abstracts/variables" as c;
@use "../abstracts/mixins" as mix;

.practice-container {
  @include mix.position(relative);
  @include mix.box-style(70%, 80%, c.$white);
  @include mix.box-minSize(300px, 100px);
  @include mix.box-maxSize(800px, none);
}

.page-container {
  @include mix.box-style(100%, 100%, inherit);
  @include mix.flexbox(column);
  @include mix.padding(5px);

  & > .btn-container {
    flex: 8%;
    @include mix.flexbox($g: 15px);
    & > h4 {
      @include mix.box-style(180px, 20px, inherit);
    }

    & > button {
      @include mix.classic-button($w: 100px);
    }
  }

  & > .contents-container {
    flex: 92%;
    @include mix.padding(5px);
  }
}

/* lifecoding scss */
.lf-container {
  @include mix.box-style(300px, 150px, inherit);
  border: 5px solid black;
  @include mix.padding(10px);

  & > input {
    @include mix.classic-button();
  }
}

@media screen and (max-height: 800px) {
  .page-container {
    overflow-y: auto;

    .lf-container {
      @include mix.box-style(200px, 130px, inherit);
      @include mix.flexbox($g: 10px);
    }
  }
}

@media screen and (max-width: 800px) {
  .page-container {
    overflow-x: auto;
  }
}

/* lifecoding-advanced scss */
.todolist-container {
  @include mix.box-style(500px, 90%);
  @include mix.gridbox(
    $a: "header control " "nav  article" "nav  article",
    $gtr: 10% 90%,
    $gtc: 20% 80%
  );
  & > header {
    grid-area: header;
    @include mix.box-style(100%, 100%);
    @include mix.border-partial($b: 3px);
    @include mix.padding($t: 10px, $l: 8px);
    & > h3 {
      @include mix.margin(0px);
    }
  }

  & > .control-container {
    grid-area: control;
    @include mix.box-style(100%, 100%);
    @include mix.flexbox($g: 15px);
    @include mix.border-partial($b: 3px);
    & > li {
      @include mix.box-minSize(50px, 30px);

      & > input[type="button"] {
        @include mix.classic-button($w: 60px, $h: 25px);
      }
    }
  }

  & > .nav-container {
    grid-area: nav;
    @include mix.box-style(100%, 100%);
    @include mix.border-partial($r: 3px);
    @include mix.font-scroll();
    &::-webkit-scrollbar {
      width: 8px;
    }
    &::-webkit-scrollbar-thumb {
      background-color: c.$bar;
      border-radius: 3px;
    }

    & > ol > li {
      @include mix.box-style(100%, 30px);
      @include mix.border-partial($b: 1px);
      @include mix.font-overflow();
      text-align: center;

      & > a {
        @include mix.font-style(18px, normal);

        &:hover {
          @include mix.font-style($fs: transparent);
        }

        &.disabled {
          cursor: not-allowed;
          opacity: 30%;
        }

        &.disabled:hover {
          @include mix.font-style(18px, normal);
          cursor: not-allowed;
          opacity: 30%;
        }
      }
    }
  }

  & > .article-container {
    @include mix.box-style(100%, 100%);
    grid-area: article;
    grid-column: 2/4;

    & > article {
      @include mix.box-style(inherit, inherit);
      @include mix.flexbox();
      & > .article-box {
        @include mix.box-style(inherit, inherit);
        @include mix.flexbox(column);

        & > h2 {
          flex: 10%;
        }

        & > p {
          flex: 90%;
          @include mix.font-wrap();
          max-width: 300px;
        }
      }
      & > form {
        @include mix.flexbox(column, $g: 5px);
        & > p {
          & > .form-title {
            @include mix.box-style(300px, 40px);
            @include mix.font-style(20px);
          }

          & > textarea {
            @include mix.box-style(295px, 300px);
            @include mix.font-style(18px);
            max-height: 300px;
            resize: vertical;
          }
        }
        & > p:last-child {
          & > input[type="submit"] {
            @include mix.classic-button($w: 80px, $h: 30px);
            @include mix.margin($r: 4px);
          }
          & > input[type="button"] {
            @include mix.classic-button($w: 80px, $h: 30px);
            @include mix.margin($l: 4px);
          }
        }
      }
    }
  }
}

/* lifecoding tutorial2 scss */
#tutorial2-container,
#tutorial2-container div {
  @include mix.border(5px, solid, c.$bar);
  @include mix.margin(5px);

  & > .grid {
    @include mix.gridbox($a: "left right", $gtc: 50% 50%);

    & > div:nth-child(1) {
      @include mix.border(5px, solid, red);
      @include mix.margin(5px);
      grid-area: left;

      & div {
        @include mix.border(5px, solid, red);
        @include mix.margin(5px);
      }
    }

    & > div:nth-child(2) {
      @include mix.border(5px, solid, blue);
      @include mix.margin(5px);
      grid-area: right;

      & div {
        @include mix.border(5px, solid, blue);
        @include mix.margin(5px);

        & input[type="button"] {
          @include mix.classic-button(35px, 35px, $bgc: inherit, $fc: c.$bar);
        }
      }
    }
  }
}

/* lifecoding tutorial3 scss */
.tutorial3-container {
  @include mix.border(5px, solid, c.$bar);
  @include mix.margin(5px);
  text-align: center;
  & > div {
    @include mix.box-style(90%, 200px);
    @include mix.flexbox();
    @include mix.border(5px, solid, c.$bar);
    @include mix.margin(15px);

    & > input[type="text"] {
      @include mix.box-style(60px, 35px);
    }

    & > button {
      @include mix.classic-button(35px, 35px);
      @include mix.margin(5px);
    }
  }
}
